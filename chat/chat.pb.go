// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: chat.proto

package chat

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	In   int32  `protobuf:"varint,2,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Message) GetIn() int32 {
	if x != nil {
		return x.In
	}
	return 0
}

type Propuesta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id1    int32   `protobuf:"varint,1,opt,name=id1,proto3" json:"id1,omitempty"`
	Id2    int32   `protobuf:"varint,2,opt,name=id2,proto3" json:"id2,omitempty"`
	Id3    int32   `protobuf:"varint,3,opt,name=id3,proto3" json:"id3,omitempty"`
	L1     []int32 `protobuf:"varint,4,rep,packed,name=l1,proto3" json:"l1,omitempty"`
	L2     []int32 `protobuf:"varint,5,rep,packed,name=l2,proto3" json:"l2,omitempty"`
	L3     []int32 `protobuf:"varint,6,rep,packed,name=l3,proto3" json:"l3,omitempty"`
	Pos    []int32 `protobuf:"varint,7,rep,packed,name=pos,proto3" json:"pos,omitempty"`
	Titulo string  `protobuf:"bytes,8,opt,name=titulo,proto3" json:"titulo,omitempty"`
}

func (x *Propuesta) Reset() {
	*x = Propuesta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Propuesta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Propuesta) ProtoMessage() {}

func (x *Propuesta) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Propuesta.ProtoReflect.Descriptor instead.
func (*Propuesta) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *Propuesta) GetId1() int32 {
	if x != nil {
		return x.Id1
	}
	return 0
}

func (x *Propuesta) GetId2() int32 {
	if x != nil {
		return x.Id2
	}
	return 0
}

func (x *Propuesta) GetId3() int32 {
	if x != nil {
		return x.Id3
	}
	return 0
}

func (x *Propuesta) GetL1() []int32 {
	if x != nil {
		return x.L1
	}
	return nil
}

func (x *Propuesta) GetL2() []int32 {
	if x != nil {
		return x.L2
	}
	return nil
}

func (x *Propuesta) GetL3() []int32 {
	if x != nil {
		return x.L3
	}
	return nil
}

func (x *Propuesta) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Propuesta) GetTitulo() string {
	if x != nil {
		return x.Titulo
	}
	return ""
}

type Titulos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titulos []string `protobuf:"bytes,1,rep,name=titulos,proto3" json:"titulos,omitempty"`
}

func (x *Titulos) Reset() {
	*x = Titulos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Titulos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Titulos) ProtoMessage() {}

func (x *Titulos) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Titulos.ProtoReflect.Descriptor instead.
func (*Titulos) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *Titulos) GetTitulos() []string {
	if x != nil {
		return x.Titulos
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info      string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Elegido   int32  `protobuf:"varint,3,opt,name=elegido,proto3" json:"elegido,omitempty"`
	Cantidad  uint64 `protobuf:"varint,4,opt,name=cantidad,proto3" json:"cantidad,omitempty"`
	FileChunk []byte `protobuf:"bytes,5,opt,name=fileChunk,proto3" json:"fileChunk,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Response) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Response) GetElegido() int32 {
	if x != nil {
		return x.Elegido
	}
	return 0
}

func (x *Response) GetCantidad() uint64 {
	if x != nil {
		return x.Cantidad
	}
	return 0
}

func (x *Response) GetFileChunk() []byte {
	if x != nil {
		return x.FileChunk
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x22, 0x2d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64,
	0x31, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x69, 0x64, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x69, 0x64, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x31, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x02, 0x6c, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x32, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x02, 0x6c, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x33, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x02, 0x6c, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x22,
	0x23, 0x0a, 0x07, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x74, 0x75, 0x6c, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74,
	0x75, 0x6c, 0x6f, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65,
	0x67, 0x69, 0x64, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x67,
	0x69, 0x64, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xd2, 0x05, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x12, 0x0e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x09, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x32,
	0x12, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x33, 0x0a, 0x11, 0x50, 0x65, 0x64, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x08, 0x52,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x69, 0x72, 0x12, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x09, 0x53, 0x61, 0x79,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x33, 0x12, 0x0e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x11, 0x45, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x69, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x1a, 0x0d, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x17, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x45, 0x73, 0x63, 0x72, 0x69, 0x62, 0x69, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0d, 0x41,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x72, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x12, 0x0d, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x13,
	0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x67, 0x61, 0x72, 0x54, 0x69, 0x74,
	0x75, 0x6c, 0x6f, 0x12, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f,
	0x73, 0x12, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x73, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x10, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x56, 0x65, 0x72, 0x54, 0x69,
	0x74, 0x75, 0x6c, 0x6f, 0x73, 0x12, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x69, 0x74, 0x75,
	0x6c, 0x6f, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x12, 0x4f, 0x62, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x62, 0x69, 0x63, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x0d, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x73, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0c, 0x42,
	0x75, 0x73, 0x63, 0x61, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x0d, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x73, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_chat_proto_goTypes = []interface{}{
	(*Message)(nil),   // 0: chat.Message
	(*Propuesta)(nil), // 1: chat.Propuesta
	(*Titulos)(nil),   // 2: chat.Titulos
	(*Response)(nil),  // 3: chat.Response
	(*Empty)(nil),     // 4: chat.Empty
}
var file_chat_proto_depIdxs = []int32{
	3,  // 0: chat.ChatService.SayHello:input_type -> chat.Response
	0,  // 1: chat.ChatService.SayHello2:input_type -> chat.Message
	0,  // 2: chat.ChatService.PedirConfirmacion:input_type -> chat.Message
	0,  // 3: chat.ChatService.GenerarPropuesta:input_type -> chat.Message
	1,  // 4: chat.ChatService.Repartir:input_type -> chat.Propuesta
	3,  // 5: chat.ChatService.SayHello3:input_type -> chat.Response
	1,  // 6: chat.ChatService.EscribirPropuesta:input_type -> chat.Propuesta
	1,  // 7: chat.ChatService.HelperEscribirPropuesta:input_type -> chat.Propuesta
	0,  // 8: chat.ChatService.AgregarTitulo:input_type -> chat.Message
	0,  // 9: chat.ChatService.HelperAgregarTitulo:input_type -> chat.Message
	0,  // 10: chat.ChatService.VerTitulos:input_type -> chat.Message
	0,  // 11: chat.ChatService.HelperVerTitulos:input_type -> chat.Message
	0,  // 12: chat.ChatService.ObtenerUbicaciones:input_type -> chat.Message
	2,  // 13: chat.ChatService.BuscarChunks:input_type -> chat.Titulos
	0,  // 14: chat.ChatService.SayHello:output_type -> chat.Message
	0,  // 15: chat.ChatService.SayHello2:output_type -> chat.Message
	0,  // 16: chat.ChatService.PedirConfirmacion:output_type -> chat.Message
	1,  // 17: chat.ChatService.GenerarPropuesta:output_type -> chat.Propuesta
	0,  // 18: chat.ChatService.Repartir:output_type -> chat.Message
	0,  // 19: chat.ChatService.SayHello3:output_type -> chat.Message
	0,  // 20: chat.ChatService.EscribirPropuesta:output_type -> chat.Message
	0,  // 21: chat.ChatService.HelperEscribirPropuesta:output_type -> chat.Message
	0,  // 22: chat.ChatService.AgregarTitulo:output_type -> chat.Message
	0,  // 23: chat.ChatService.HelperAgregarTitulo:output_type -> chat.Message
	2,  // 24: chat.ChatService.VerTitulos:output_type -> chat.Titulos
	2,  // 25: chat.ChatService.HelperVerTitulos:output_type -> chat.Titulos
	2,  // 26: chat.ChatService.ObtenerUbicaciones:output_type -> chat.Titulos
	0,  // 27: chat.ChatService.BuscarChunks:output_type -> chat.Message
	14, // [14:28] is the sub-list for method output_type
	0,  // [0:14] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Propuesta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Titulos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	SayHello(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Message, error)
	SayHello2(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	PedirConfirmacion(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	GenerarPropuesta(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Propuesta, error)
	Repartir(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	SayHello3(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Message, error)
	EscribirPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	HelperEscribirPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	AgregarTitulo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	HelperAgregarTitulo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	VerTitulos(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error)
	HelperVerTitulos(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error)
	ObtenerUbicaciones(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error)
	BuscarChunks(ctx context.Context, in *Titulos, opts ...grpc.CallOption) (*Message, error)
}

type chatServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatServiceClient(cc grpc.ClientConnInterface) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) SayHello(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) SayHello2(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/SayHello2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) PedirConfirmacion(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/PedirConfirmacion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GenerarPropuesta(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Propuesta, error) {
	out := new(Propuesta)
	err := c.cc.Invoke(ctx, "/chat.ChatService/GenerarPropuesta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Repartir(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/Repartir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) SayHello3(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/SayHello3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) EscribirPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/EscribirPropuesta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HelperEscribirPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/HelperEscribirPropuesta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) AgregarTitulo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/AgregarTitulo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HelperAgregarTitulo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/HelperAgregarTitulo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) VerTitulos(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error) {
	out := new(Titulos)
	err := c.cc.Invoke(ctx, "/chat.ChatService/VerTitulos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HelperVerTitulos(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error) {
	out := new(Titulos)
	err := c.cc.Invoke(ctx, "/chat.ChatService/HelperVerTitulos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) ObtenerUbicaciones(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error) {
	out := new(Titulos)
	err := c.cc.Invoke(ctx, "/chat.ChatService/ObtenerUbicaciones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) BuscarChunks(ctx context.Context, in *Titulos, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/BuscarChunks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	SayHello(context.Context, *Response) (*Message, error)
	SayHello2(context.Context, *Message) (*Message, error)
	PedirConfirmacion(context.Context, *Message) (*Message, error)
	GenerarPropuesta(context.Context, *Message) (*Propuesta, error)
	Repartir(context.Context, *Propuesta) (*Message, error)
	SayHello3(context.Context, *Response) (*Message, error)
	EscribirPropuesta(context.Context, *Propuesta) (*Message, error)
	HelperEscribirPropuesta(context.Context, *Propuesta) (*Message, error)
	AgregarTitulo(context.Context, *Message) (*Message, error)
	HelperAgregarTitulo(context.Context, *Message) (*Message, error)
	VerTitulos(context.Context, *Message) (*Titulos, error)
	HelperVerTitulos(context.Context, *Message) (*Titulos, error)
	ObtenerUbicaciones(context.Context, *Message) (*Titulos, error)
	BuscarChunks(context.Context, *Titulos) (*Message, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) SayHello(context.Context, *Response) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedChatServiceServer) SayHello2(context.Context, *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello2 not implemented")
}
func (*UnimplementedChatServiceServer) PedirConfirmacion(context.Context, *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PedirConfirmacion not implemented")
}
func (*UnimplementedChatServiceServer) GenerarPropuesta(context.Context, *Message) (*Propuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerarPropuesta not implemented")
}
func (*UnimplementedChatServiceServer) Repartir(context.Context, *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Repartir not implemented")
}
func (*UnimplementedChatServiceServer) SayHello3(context.Context, *Response) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello3 not implemented")
}
func (*UnimplementedChatServiceServer) EscribirPropuesta(context.Context, *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EscribirPropuesta not implemented")
}
func (*UnimplementedChatServiceServer) HelperEscribirPropuesta(context.Context, *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelperEscribirPropuesta not implemented")
}
func (*UnimplementedChatServiceServer) AgregarTitulo(context.Context, *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgregarTitulo not implemented")
}
func (*UnimplementedChatServiceServer) HelperAgregarTitulo(context.Context, *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelperAgregarTitulo not implemented")
}
func (*UnimplementedChatServiceServer) VerTitulos(context.Context, *Message) (*Titulos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerTitulos not implemented")
}
func (*UnimplementedChatServiceServer) HelperVerTitulos(context.Context, *Message) (*Titulos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelperVerTitulos not implemented")
}
func (*UnimplementedChatServiceServer) ObtenerUbicaciones(context.Context, *Message) (*Titulos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ObtenerUbicaciones not implemented")
}
func (*UnimplementedChatServiceServer) BuscarChunks(context.Context, *Titulos) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuscarChunks not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Response)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SayHello(ctx, req.(*Response))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_SayHello2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SayHello2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SayHello2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SayHello2(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_PedirConfirmacion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).PedirConfirmacion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/PedirConfirmacion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).PedirConfirmacion(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_GenerarPropuesta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).GenerarPropuesta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/GenerarPropuesta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).GenerarPropuesta(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Repartir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Repartir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/Repartir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Repartir(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_SayHello3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Response)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SayHello3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SayHello3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SayHello3(ctx, req.(*Response))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_EscribirPropuesta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).EscribirPropuesta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/EscribirPropuesta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).EscribirPropuesta(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HelperEscribirPropuesta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HelperEscribirPropuesta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/HelperEscribirPropuesta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HelperEscribirPropuesta(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_AgregarTitulo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).AgregarTitulo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/AgregarTitulo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).AgregarTitulo(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HelperAgregarTitulo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HelperAgregarTitulo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/HelperAgregarTitulo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HelperAgregarTitulo(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_VerTitulos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).VerTitulos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/VerTitulos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).VerTitulos(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HelperVerTitulos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HelperVerTitulos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/HelperVerTitulos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HelperVerTitulos(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_ObtenerUbicaciones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).ObtenerUbicaciones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/ObtenerUbicaciones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).ObtenerUbicaciones(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_BuscarChunks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Titulos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).BuscarChunks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/BuscarChunks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).BuscarChunks(ctx, req.(*Titulos))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _ChatService_SayHello_Handler,
		},
		{
			MethodName: "SayHello2",
			Handler:    _ChatService_SayHello2_Handler,
		},
		{
			MethodName: "PedirConfirmacion",
			Handler:    _ChatService_PedirConfirmacion_Handler,
		},
		{
			MethodName: "GenerarPropuesta",
			Handler:    _ChatService_GenerarPropuesta_Handler,
		},
		{
			MethodName: "Repartir",
			Handler:    _ChatService_Repartir_Handler,
		},
		{
			MethodName: "SayHello3",
			Handler:    _ChatService_SayHello3_Handler,
		},
		{
			MethodName: "EscribirPropuesta",
			Handler:    _ChatService_EscribirPropuesta_Handler,
		},
		{
			MethodName: "HelperEscribirPropuesta",
			Handler:    _ChatService_HelperEscribirPropuesta_Handler,
		},
		{
			MethodName: "AgregarTitulo",
			Handler:    _ChatService_AgregarTitulo_Handler,
		},
		{
			MethodName: "HelperAgregarTitulo",
			Handler:    _ChatService_HelperAgregarTitulo_Handler,
		},
		{
			MethodName: "VerTitulos",
			Handler:    _ChatService_VerTitulos_Handler,
		},
		{
			MethodName: "HelperVerTitulos",
			Handler:    _ChatService_HelperVerTitulos_Handler,
		},
		{
			MethodName: "ObtenerUbicaciones",
			Handler:    _ChatService_ObtenerUbicaciones_Handler,
		},
		{
			MethodName: "BuscarChunks",
			Handler:    _ChatService_BuscarChunks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}
